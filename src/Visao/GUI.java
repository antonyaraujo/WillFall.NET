/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Visao;

import Controlador.Sistema;
import Modelo.Observer;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;

/**
 *
 * @author antony
 */
public class GUI extends javax.swing.JFrame implements Modelo.Observable{
    private Sistema sys;
    private GrafoGUI painel;
    private ArrayList<Observer> observers;
    /**
     * Creates new form GUI
     */
    
    public GUI() throws IOException {        
        this.sys = new Sistema();             
        initComponents();
        pack();                                 
        this.setSize(1200, 700);                  
        painel = new GrafoGUI(sys.getGrafo());
        getContentPane().add(painel);         
        painel.setLocation(36, painelOpcoes.getY());
        painel.setSize(this.getWidth()-painelOpcoes.getWidth()-100, painelOpcoes.getHeight());        
        this.setLocationRelativeTo(null);
        observers = new ArrayList();                          
    }

    @Override
    public void registerObserver(Observer observer) {
        observers.add(observer);
    }

    @Override
    public void removeObserver(Observer observer) {
        observers.remove(observer);
    }

    @Override
    public void notifyObservers() {
        
    }
        
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painelOpcoes = new javax.swing.JPanel();
        adicionarEquipamentoButton = new javax.swing.JButton();
        Botao_sair = new javax.swing.JButton();
        removerEquipamentoButton = new javax.swing.JButton();
        resetarRedeButton = new javax.swing.JButton();
        identificarCaminhos = new javax.swing.JButton();
        adicionarConexao = new javax.swing.JButton();
        barraMenu = new javax.swing.JMenuBar();
        arquivo = new javax.swing.JMenu();
        carregarArquivo = new javax.swing.JMenuItem();
        salvarArquivo = new javax.swing.JMenuItem();
        visualizar = new javax.swing.JMenu();
        exibirPesos = new javax.swing.JCheckBoxMenuItem();
        grafo = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("WillFall.NET");
        setResizable(false);

        painelOpcoes.setBorder(javax.swing.BorderFactory.createTitledBorder("Opções de Rede"));

        adicionarEquipamentoButton.setText("Adicionar Equipamento");
        adicionarEquipamentoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adicionarEquipamentoButtonActionPerformed(evt);
            }
        });

        Botao_sair.setText("Sair");
        Botao_sair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Botao_sairActionPerformed(evt);
            }
        });

        removerEquipamentoButton.setText("Remover Equipamento");
        removerEquipamentoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removerEquipamentoButtonActionPerformed(evt);
            }
        });

        resetarRedeButton.setText("Resetar Rede");
        resetarRedeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetarRedeButtonActionPerformed(evt);
            }
        });

        identificarCaminhos.setText("Identificar Caminhos");
        identificarCaminhos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                identificarCaminhosActionPerformed(evt);
            }
        });

        adicionarConexao.setText("Adicionar Conexão");
        adicionarConexao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adicionarConexaoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelOpcoesLayout = new javax.swing.GroupLayout(painelOpcoes);
        painelOpcoes.setLayout(painelOpcoesLayout);
        painelOpcoesLayout.setHorizontalGroup(
            painelOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelOpcoesLayout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addGroup(painelOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelOpcoesLayout.createSequentialGroup()
                        .addComponent(Botao_sair, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelOpcoesLayout.createSequentialGroup()
                        .addGroup(painelOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(removerEquipamentoButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(adicionarEquipamentoButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(adicionarConexao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(resetarRedeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(identificarCaminhos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18))))
        );
        painelOpcoesLayout.setVerticalGroup(
            painelOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelOpcoesLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(adicionarEquipamentoButton)
                .addGap(18, 18, 18)
                .addComponent(removerEquipamentoButton)
                .addGap(18, 18, 18)
                .addComponent(adicionarConexao)
                .addGap(18, 18, 18)
                .addComponent(resetarRedeButton)
                .addGap(18, 18, 18)
                .addComponent(identificarCaminhos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 306, Short.MAX_VALUE)
                .addComponent(Botao_sair)
                .addContainerGap())
        );

        arquivo.setText("Arquivo");

        carregarArquivo.setText("Carregar Arquivo");
        carregarArquivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carregarArquivoActionPerformed(evt);
            }
        });
        arquivo.add(carregarArquivo);

        salvarArquivo.setText("Salvar Arquivo");
        salvarArquivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarArquivoActionPerformed(evt);
            }
        });
        arquivo.add(salvarArquivo);

        barraMenu.add(arquivo);

        visualizar.setText("Visualizar");

        exibirPesos.setSelected(true);
        exibirPesos.setText("Exibir pesos");
        exibirPesos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exibirPesosActionPerformed(evt);
            }
        });
        visualizar.add(exibirPesos);

        barraMenu.add(visualizar);

        grafo.setText("Grafo");
        barraMenu.add(grafo);

        setJMenuBar(barraMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(417, Short.MAX_VALUE)
                .addComponent(painelOpcoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(painelOpcoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void Botao_sairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Botao_sairActionPerformed
        System.exit(0);
    }//GEN-LAST:event_Botao_sairActionPerformed


    private void carregarArquivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_carregarArquivoActionPerformed
        JFileChooser fc = new JFileChooser();
        fc.showOpenDialog(this);
        try {
            sys.carregarArquivo(fc.getSelectedFile());
        } catch (IOException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        painel.repaint();
    }//GEN-LAST:event_carregarArquivoActionPerformed

    private void adicionarEquipamentoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adicionarEquipamentoButtonActionPerformed
        Object[] opcoes = {"Roteador", "Computador", "Internet"};                   
        painel.adicionarEquipamentoMouse(JOptionPane.showInputDialog(null, "Selecione qual equipamento deseja adicionar", "adicionar Equipamento", JOptionPane.QUESTION_MESSAGE, null, opcoes, opcoes[0]));                  
        painel.repaint();       
    }//GEN-LAST:event_adicionarEquipamentoButtonActionPerformed

    private void salvarArquivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarArquivoActionPerformed
        JFileChooser fc = new JFileChooser();        
        fc.setDialogTitle("Exportar Arquivo de Configuração");                
        fc.showDialog(this, "Salvar");        
        try {
                sys.salvarArquivo(fc.getSelectedFile().getPath());
        } catch (IOException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }        
        painel.repaint();        
    }//GEN-LAST:event_salvarArquivoActionPerformed

    private void removerEquipamentoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removerEquipamentoButtonActionPerformed
        String nome = JOptionPane.showInputDialog("Informe o nome do componente a ser removido").toUpperCase();                          
        if(sys.removerVertice(nome))
                JOptionPane.showMessageDialog(null, nome + " foi removido com sucesso!");        
        painel.removeAll();
        painel.repaint();
    }//GEN-LAST:event_removerEquipamentoButtonActionPerformed

    private void resetarRedeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetarRedeButtonActionPerformed
        sys.resetarRede();       
        painel.removeAll();
        painel.validate();
        painel.repaint(); 
    }//GEN-LAST:event_resetarRedeButtonActionPerformed

    private void adicionarConexaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adicionarConexaoActionPerformed
        
                String r1 = JOptionPane.showInputDialog(null,"Digite o rótulo do primeiro equipamento", "Rótulo", 1);
                if (r1==null)
                    return;
                String r2 = JOptionPane.showInputDialog(null,"Digite o rótulo do segundo equipamento", "Rótulo", 1);
                if (r2==null)
                     return;
                int peso = (Integer.parseInt(JOptionPane.showInputDialog(null,"Digite o peso da conexão","Peso", 1)));
                    
                sys.adicionarAresta(r1.toUpperCase(), r2.toUpperCase(), peso);                                                                     
    }//GEN-LAST:event_adicionarConexaoActionPerformed

    private void identificarCaminhosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_identificarCaminhosActionPerformed
        String computador = JOptionPane.showInputDialog(null, "Informe o nome do nó");
        JScrollPane barraRolagem = sys.identificarMelhorCaminho(computador);
        JFrame exibir = new JFrame("Caminhos menos custosos do " + computador);
        exibir.add(barraRolagem);
        JButton salvar = new JButton("Salvar");
        JButton sair = new JButton("Sair");
        sair.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                exibir.setVisible(false);
            }
        });
        exibir.setSize(600, 200);
        exibir.setVisible(true);
        exibir.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        exibir.setLocationRelativeTo(null);
        barraRolagem.validate();
        barraRolagem.repaint();
    }//GEN-LAST:event_identificarCaminhosActionPerformed

    private void exibirPesosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exibirPesosActionPerformed
        if(!exibirPesos.isSelected()){
            
        }
    }//GEN-LAST:event_exibirPesosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        String so = "";
        so = System.getProperty("os.name");
        so = so.replaceAll("10", "").strip();
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if (so.equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new GUI().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Botao_sair;
    private javax.swing.JButton adicionarConexao;
    private javax.swing.JButton adicionarEquipamentoButton;
    private javax.swing.JMenu arquivo;
    private javax.swing.JMenuBar barraMenu;
    private javax.swing.JMenuItem carregarArquivo;
    private javax.swing.JCheckBoxMenuItem exibirPesos;
    private javax.swing.JMenu grafo;
    private javax.swing.JButton identificarCaminhos;
    private javax.swing.JPanel painelOpcoes;
    private javax.swing.JButton removerEquipamentoButton;
    private javax.swing.JButton resetarRedeButton;
    private javax.swing.JMenuItem salvarArquivo;
    private javax.swing.JMenu visualizar;
    // End of variables declaration//GEN-END:variables

}
